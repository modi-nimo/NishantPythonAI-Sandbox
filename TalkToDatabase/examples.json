[
  {
    "example_question": "List the names and roles of all employees.",
    "example_answer": "SELECT \"FirstName\", \"LastName\", \"Role\" FROM dbo.\"Employees\";"
  },
  {
    "example_question": "Show me all the work orders that are currently in progress.",
    "example_answer": "SELECT \"WorkOrderID\", \"ProductID\", \"ScheduledStartDateTime\" FROM dbo.\"WorkOrders\" WHERE \"Status\" = 'InProgress';"
  },
  {
    "example_question": "What are the different types of defect categories?",
    "example_answer": "SELECT \"CategoryName\", \"Description\" FROM dbo.\"DefectCategories\";"
  },
  {
    "example_question": "Find all defects that have not been closed yet.",
    "example_answer": "SELECT \"DefectName\", \"DefectReason\", \"ReportedDateTime\" FROM dbo.\"Defects\" WHERE \"IsClosed\" = false;"
  },
  {
    "example_question": "List all work orders and the name of the product associated with each.",
    "example_answer": "SELECT T1.\"WorkOrderID\", T1.\"Status\", T2.\"ProductName\" FROM dbo.\"WorkOrders\" AS T1 JOIN dbo.\"Products\" AS T2 ON T1.\"ProductID\" = T2.\"ProductID\";"
  },
  {
    "example_question": "What raw materials were used for Work Order ID 1, and in what quantity?",
    "example_answer": "SELECT T2.\"MaterialName\", T1.\"QuantityUsed\", T1.\"UsageDateTime\" FROM dbo.\"WorkOrderMaterials\" AS T1 JOIN dbo.\"RawMaterials\" AS T2 ON T1.\"MaterialID\" = T2.\"MaterialID\" WHERE T1.\"WorkOrderID\" = 1;"
  },
  {
    "example_question": "Show the total quantity produced for each product.",
    "example_answer": "SELECT T2.\"ProductName\", SUM(T1.\"QuantityProduced\") AS \"TotalQuantity\" FROM dbo.\"ProductionData\" AS T1 JOIN dbo.\"Products\" AS T2 ON T1.\"ProductID\" = T2.\"ProductID\" GROUP BY T2.\"ProductName\" ORDER BY \"TotalQuantity\" DESC;"
  },
  {
    "example_question": "Which raw materials in the inventory were quality-checked by supervisors?",
    "example_answer": "SELECT T3.\"MaterialName\", T1.\"Quantity\", T2.\"FirstName\" AS \"SupervisorFirstName\", T2.\"LastName\" AS \"SupervisorLastName\" FROM dbo.\"RawMaterialInventory\" AS T1 JOIN dbo.\"Employees\" AS T2 ON T1.\"QualityCheckedByID\" = T2.\"EmployeeID\" JOIN dbo.\"RawMaterials\" AS T3 ON T1.\"MaterialID\" = T3.\"MaterialID\" WHERE T2.\"Role\" = 'Supervisor';"
  },
  {
    "example_question": "Find the top 3 employees who have handled the most defects.",
    "example_answer": "SELECT T2.\"FirstName\", T2.\"LastName\", COUNT(T1.\"DefectID\") AS \"DefectsHandled\" FROM dbo.\"Defects\" AS T1 JOIN dbo.\"Employees\" AS T2 ON T1.\"HandledByID\" = T2.\"EmployeeID\" GROUP BY T2.\"FirstName\", T2.\"LastName\" ORDER BY \"DefectsHandled\" DESC LIMIT 3;"
  },
  {
    "example_question": "List products that have had defects categorized as 'Material' issues.",
    "example_answer": "SELECT DISTINCT T3.\"ProductName\" FROM dbo.\"Defects\" AS T1 JOIN dbo.\"WorkOrders\" AS T2 ON T1.\"WorkOrderID\" = T2.\"WorkOrderID\" JOIN dbo.\"Products\" AS T3 ON T2.\"ProductID\" = T3.\"ProductID\" JOIN dbo.\"DefectCategories\" AS T4 ON T1.\"CategoryID\" = T4.\"CategoryID\" WHERE T4.\"CategoryName\" = 'Material';"
  },
  {
    "example_question": "Our OEE felt low in February. Can you break down the daily Availability, Performance, and Quality for me?",
    "example_answer": "DECLARE @IdealRate DECIMAL(10, 2) = 1.0; DECLARE @StartDate DATE = '2025-02-01'; DECLARE @EndDate DATE = '2025-02-28'; WITH WorkCenterOEE AS (SELECT s.[Date], s.[WorkCenterID], s.[PlannedProductionHours], CASE WHEN s.[PlannedProductionHours] > 0 THEN (s.[PlannedProductionHours] - (ISNULL(d.[TotalDowntimeMinutes], 0) / 60.0)) / s.[PlannedProductionHours] ELSE 0 END AS [Availability], CASE WHEN (s.[PlannedProductionHours] - (ISNULL(d.[TotalDowntimeMinutes], 0) / 60.0)) > 0 THEN LEAST(1.0, (ISNULL(p.[GoodUnits], 0) * 1.0) / ((s.[PlannedProductionHours] - (ISNULL(d.[TotalDowntimeMinutes], 0) / 60.0)) * @IdealRate)) ELSE 0 END AS [Performance], CASE WHEN ISNULL(p.[TotalUnits], 0) > 0 THEN (ISNULL(p.[GoodUnits], 0) * 1.0 / p.[TotalUnits]) ELSE 1 END AS [Quality] FROM (SELECT CAST(pd.\"ProductionDateTime\" AS DATE) AS [Date], pd.[WorkCenterID], CAST(SUM(CASE WHEN s.[EndTime] < s.[StartTime] THEN DATEDIFF(hour, s.[StartTime], s.[EndTime]) + 24 ELSE DATEDIFF(hour, s.[StartTime], s.[EndTime]) END) AS DECIMAL(10, 2)) AS [PlannedProductionHours] FROM dbo.\"ProductionData\" pd JOIN dbo.\"Shifts\" s ON pd.\"ShiftID\" = s.\"ShiftID\" WHERE pd.\"ProductionDateTime\" BETWEEN @StartDate AND DATEADD(day, 1, @EndDate) GROUP BY CAST(pd.\"ProductionDateTime\" AS DATE), pd.\"WorkCenterID\") s LEFT JOIN (SELECT CAST([ProductionDateTime] AS DATE) AS [Date], [WorkCenterID], SUM([QuantityProduced]) AS [TotalUnits], SUM(CASE WHEN [Status] IN ('Completed', 'Inspected') THEN [QuantityProduced] ELSE 0 END) AS [GoodUnits] FROM dbo.\"ProductionData\" WHERE [ProductionDateTime] BETWEEN @StartDate AND DATEADD(day, 1, @EndDate) GROUP BY CAST([ProductionDateTime] AS DATE), [WorkCenterID]) p ON s.[Date] = p.[Date] AND s.[WorkCenterID] = p.[WorkCenterID] LEFT JOIN (SELECT CAST([DowntimeStartDateTime] AS DATE) AS [Date], [WorkCenterID], SUM(DATEDIFF(minute, [DowntimeStartDateTime], [DowntimeEndDateTime])) AS [TotalDowntimeMinutes] FROM dbo.\"MachineDowntime\" WHERE [DowntimeStartDateTime] BETWEEN @StartDate AND DATEADD(day, 1, @EndDate) GROUP BY CAST([DowntimeStartDateTime] AS DATE), [WorkCenterID]) d ON s.[Date] = d.[Date] AND s.[WorkCenterID] = d.[WorkCenterID]) SELECT oee.\"Date\", CAST(AVG(oee.[Availability])*100 AS DECIMAL(5,1)) as [Avg_Availability_Percent], CAST(AVG(oee.[Performance])*100 AS DECIMAL(5,1)) as [Avg_Performance_Percent], CAST(AVG(oee.[Quality])*100 AS DECIMAL(5,1)) as [Avg_Quality_Percent] FROM WorkCenterOEE oee GROUP BY oee.\"Date\" ORDER BY oee.\"Date\";"
  },
  {
    "example_question": "Which 3 work centers had the lowest average OEE in February?",
    "example_answer": "DECLARE @IdealRate DECIMAL(10, 2) = 1.0; DECLARE @StartDate DATE = '2025-02-01'; DECLARE @EndDate DATE = '2025-02-28'; WITH WorkCenterOEE AS (SELECT s.[WorkCenterID], (s.[PlannedProductionHours] - ISNULL(d.[TotalDowntimeMinutes], 0) / 60.0) / NULLIF(s.[PlannedProductionHours], 0) AS [Availability], ISNULL(p.[GoodUnits], 0) * 1.0 / NULLIF((s.[PlannedProductionHours] - ISNULL(d.[TotalDowntimeMinutes], 0) / 60.0) * @IdealRate, 0) AS [Performance], ISNULL(p.[GoodUnits], 0) * 1.0 / NULLIF(ISNULL(p.[TotalUnits], 0), 0) AS [Quality] FROM (SELECT [WorkCenterID], CAST(SUM(CASE WHEN s.[EndTime] < s.[StartTime] THEN DATEDIFF(hour, s.[StartTime], s.[EndTime]) + 24 ELSE DATEDIFF(hour, s.[StartTime], s.[EndTime]) END) AS DECIMAL(10, 2)) AS [PlannedProductionHours] FROM dbo.\"ProductionData\" pd JOIN dbo.\"Shifts\" s ON pd.\"ShiftID\" = s.\"ShiftID\" WHERE pd.\"ProductionDateTime\" BETWEEN @StartDate AND DATEADD(day, 1, @EndDate) GROUP BY [WorkCenterID]) s LEFT JOIN (SELECT [WorkCenterID], SUM(DATEDIFF(minute, [DowntimeStartDateTime], [DowntimeEndDateTime])) AS [TotalDowntimeMinutes] FROM dbo.\"MachineDowntime\" WHERE [DowntimeStartDateTime] BETWEEN @StartDate AND DATEADD(day, 1, @EndDate) GROUP BY [WorkCenterID]) d ON s.[WorkCenterID] = d.[WorkCenterID] LEFT JOIN (SELECT [WorkCenterID], SUM([QuantityProduced]) AS [TotalUnits], SUM(CASE WHEN [Status] IN ('Completed', 'Inspected') THEN [QuantityProduced] ELSE 0 END) AS [GoodUnits] FROM dbo.\"ProductionData\" WHERE [ProductionDateTime] BETWEEN @StartDate AND DATEADD(day, 1, @EndDate) GROUP BY [WorkCenterID]) p ON s.[WorkCenterID] = p.[WorkCenterID]) SELECT TOP 3 wc.\"WorkCenterName\", CONCAT(CAST(AVG(oee.[Availability] * LEAST(1.0, oee.[Performance]) * oee.[Quality]) * 100 AS DECIMAL(5,1)), '%') AS [Average_OEE] FROM WorkCenterOEE oee JOIN dbo.\"WorkCenters\" wc ON oee.\"WorkCenterID\" = wc.\"WorkCenterID\" GROUP BY wc.\"WorkCenterName\" ORDER BY [Average_OEE] ASC;"
  },
  {
    "example_question": "Show me all the downtime events and reasons for 'Welding Station 1' in February.",
    "example_answer": "DECLARE @WorkcenterName NVARCHAR(100) = 'Welding Station 1'; DECLARE @StartDate DATE = '2025-02-01'; DECLARE @EndDate DATE = '2025-02-28'; SELECT T1.\"DowntimeStartDateTime\", T1.\"DowntimeEndDateTime\", DATEDIFF(minute, T1.\"DowntimeStartDateTime\", T1.\"DowntimeEndDateTime\") as [DurationMinutes], T1.\"Reason\" FROM dbo.\"MachineDowntime\" T1 JOIN dbo.\"WorkCenters\" T2 ON T1.\"WorkCenterID\" = T2.\"WorkCenterID\" WHERE T2.\"WorkCenterName\" = @WorkcenterName AND T1.\"DowntimeStartDateTime\" BETWEEN @StartDate AND DATEADD(day, 1, @EndDate) ORDER BY T1.\"DowntimeStartDateTime\";"
  },
  {
    "example_question": "How much potential revenue was lost in February due to downtime?",
    "example_answer": "DECLARE @IdealRate DECIMAL(10, 2) = 1.0; DECLARE @StartDate DATE = '2025-02-01'; DECLARE @EndDate DATE = '2025-02-28'; WITH DowntimeLoss AS (SELECT T1.\"WorkCenterID\", CAST(SUM(DATEDIFF(minute, T1.\"DowntimeStartDateTime\", T1.\"DowntimeEndDateTime\")) / 60.0 AS DECIMAL(10,2)) AS [DowntimeHours] FROM dbo.\"MachineDowntime\" T1 WHERE T1.\"DowntimeStartDateTime\" BETWEEN @StartDate AND DATEADD(day, 1, @EndDate) GROUP BY T1.\"WorkCenterID\"), AvgProductValue AS (SELECT pd.\"WorkCenterID\", AVG(p.\"UnitPrice\") as [AvgPrice] FROM dbo.\"ProductionData\" pd JOIN dbo.\"Products\" p ON pd.\"ProductID\" = p.\"ProductID\" WHERE pd.\"ProductionDateTime\" BETWEEN @StartDate AND DATEADD(day, 1, @EndDate) GROUP BY pd.\"WorkCenterID\") SELECT CAST(SUM(T1.\"DowntimeHours\" * @IdealRate * T2.\"AvgPrice\") AS DECIMAL(12,2)) AS \"TotalEstimatedRevenueLoss\" FROM DowntimeLoss T1 JOIN AvgProductValue T2 ON T1.\"WorkCenterID\" = T2.\"WorkCenterID\";"
  },
  {
    "example_question": "Which product caused the highest revenue loss due to defects in February?",
    "example_answer": "DECLARE @StartDate DATE = '2025-02-01'; DECLARE @EndDate DATE = '2025-02-28'; WITH DefectiveProduction AS (SELECT \"ProductID\", (SUM(\"QuantityProduced\") - SUM(CASE WHEN \"Status\" IN ('Completed', 'Inspected') THEN \"QuantityProduced\" ELSE 0 END)) AS \"DefectiveCount\" FROM dbo.\"ProductionData\" WHERE \"ProductionDateTime\" BETWEEN @StartDate AND DATEADD(day, 1, @EndDate) GROUP BY \"ProductID\") SELECT TOP 1 T2.\"ProductName\", CAST(T1.\"DefectiveCount\" * T2.\"UnitPrice\" AS DECIMAL(12,2)) AS \"PotentialRevenueLoss\" FROM DefectiveProduction T1 JOIN dbo.\"Products\" T2 ON T1.\"ProductID\" = T2.\"ProductID\" WHERE T1.\"DefectiveCount\" > 0 ORDER BY \"PotentialRevenueLoss\" DESC;"
  },
  {
    "example_question": "If we had zero unplanned downtime in February, what would our overall OEE have been?",
    "example_answer": "DECLARE @IdealRate DECIMAL(10, 2) = 1.0; DECLARE @StartDate DATE = '2025-02-01'; DECLARE @EndDate DATE = '2025-02-28'; WITH WorkCenterPerformance AS (SELECT s.[WorkCenterID], s.[PlannedProductionHours], p.[GoodUnits], p.[TotalUnits] FROM (SELECT [WorkCenterID], CAST(SUM(CASE WHEN s.[EndTime] < s.[StartTime] THEN DATEDIFF(hour, s.[StartTime], s.[EndTime]) + 24 ELSE DATEDIFF(hour, s.[StartTime], s.[EndTime]) END) AS DECIMAL(10, 2)) AS [PlannedProductionHours] FROM dbo.\"ProductionData\" pd JOIN dbo.\"Shifts\" s ON pd.\"ShiftID\" = s.\"ShiftID\" WHERE pd.\"ProductionDateTime\" BETWEEN @StartDate AND DATEADD(day, 1, @EndDate) GROUP BY [WorkCenterID]) s LEFT JOIN (SELECT [WorkCenterID], SUM([QuantityProduced]) AS [TotalUnits], SUM(CASE WHEN [Status] IN ('Completed', 'Inspected') THEN [QuantityProduced] ELSE 0 END) AS [GoodUnits] FROM dbo.\"ProductionData\" WHERE [ProductionDateTime] BETWEEN @StartDate AND DATEADD(day, 1, @EndDate) GROUP BY [WorkCenterID]) p ON s.[WorkCenterID] = p.[WorkCenterID]) SELECT CONCAT(CAST((SUM( (1.0) * (wcp.\"GoodUnits\" * 1.0 / NULLIF(wcp.\"PlannedProductionHours\" * @IdealRate, 0)) * (wcp.\"GoodUnits\" * 1.0 / NULLIF(wcp.\"TotalUnits\", 0)) * wcp.\"PlannedProductionHours\") / NULLIF(SUM(wcp.\"PlannedProductionHours\"), 0)) * 100 AS DECIMAL(5,1)), '%') AS \"Projected_OEE_With_Zero_Downtime\" FROM WorkCenterPerformance wcp;"
  },
  {
    "example_question": "What was our factory's daily OEE report for February 2025?",
    "example_answer": "DECLARE @IdealProductionRateUnitsPerHour DECIMAL(10, 2) = 1.0; DECLARE @StartDate DATE = '2025-02-01'; DECLARE @EndDate DATE = '2025-02-28'; WITH AllDays([Date]) AS (SELECT @StartDate AS [Date] UNION ALL SELECT DATEADD(day, 1, [Date]) FROM AllDays WHERE [Date] <= @EndDate), WorkCenterOEE AS (SELECT s.[Date], s.[WorkCenterID], ISNULL(s.[PlannedProductionHours], 0) AS [PlannedProductionHours], ISNULL(d.[TotalDowntimeMinutes], 0) / 60.0 AS [DowntimeHours], (ISNULL(p.[TotalUnits], 0) - ISNULL(p.[GoodUnits], 0)) AS [DefectiveUnits], ISNULL(p.[GoodUnits], 0) AS [GoodUnits], ISNULL(p.[TotalUnits], 0) AS [TotalUnits], CASE WHEN ISNULL(s.[PlannedProductionHours], 0) > 0 THEN (s.[PlannedProductionHours] - (ISNULL(d.[TotalDowntimeMinutes], 0) / 60.0)) / s.[PlannedProductionHours] ELSE 0 END AS [Availability], CASE WHEN (s.[PlannedProductionHours] - (ISNULL(d.[TotalDowntimeMinutes], 0) / 60.0)) > 0 THEN LEAST(1.0, (ISNULL(p.[GoodUnits], 0) * 1.0) / ((s.[PlannedProductionHours] - (ISNULL(d.[TotalDowntimeMinutes], 0) / 60.0)) * @IdealProductionRateUnitsPerHour)) ELSE 0 END AS [Performance], CASE WHEN ISNULL(p.[TotalUnits], 0) > 0 THEN (ISNULL(p.[GoodUnits], 0) * 1.0 / p.[TotalUnits]) ELSE 1 END AS [Quality] FROM (SELECT CAST(pd.[ProductionDateTime] AS DATE) AS [Date], pd.[WorkCenterID], CAST(SUM(CASE WHEN s.[EndTime] < s.[StartTime] THEN DATEDIFF(hour, s.[StartTime], s.[EndTime]) + 24 ELSE DATEDIFF(hour, s.[StartTime], s.[EndTime]) END) AS DECIMAL(10, 2)) AS [PlannedProductionHours] FROM dbo.\"ProductionData\" pd JOIN dbo.\"Shifts\" s ON pd.\"ShiftID\" = s.\"ShiftID\" WHERE pd.\"ProductionDateTime\" BETWEEN @StartDate AND DATEADD(day, 1, @EndDate) GROUP BY CAST(pd.\"ProductionDateTime\" AS DATE), pd.\"WorkCenterID\") s LEFT JOIN (SELECT CAST([ProductionDateTime] AS DATE) AS [Date], [WorkCenterID], SUM([QuantityProduced]) AS [TotalUnits], SUM(CASE WHEN [Status] IN ('Completed', 'Inspected') THEN [QuantityProduced] ELSE 0 END) AS [GoodUnits] FROM dbo.\"ProductionData\" WHERE [ProductionDateTime] BETWEEN @StartDate AND DATEADD(day, 1, @EndDate) GROUP BY CAST([ProductionDateTime] AS DATE), [WorkCenterID]) p ON s.[Date] = p.[Date] AND s.[WorkCenterID] = p.[WorkCenterID] LEFT JOIN (SELECT CAST([DowntimeStartDateTime] AS DATE) AS [Date], [WorkCenterID], SUM(DATEDIFF(minute, [DowntimeStartDateTime], [DowntimeEndDateTime])) AS [TotalDowntimeMinutes] FROM dbo.\"MachineDowntime\" WHERE [DowntimeStartDateTime] BETWEEN @StartDate AND DATEADD(day, 1, @EndDate) GROUP BY CAST([DowntimeStartDateTime] AS DATE), [WorkCenterID]) d ON s.[Date] = d.[Date] AND s.[WorkCenterID] = d.[WorkCenterID]) SELECT DATEPART(day, d.[Date]) AS [Day], CAST(ISNULL(SUM(o.[PlannedProductionHours]), 0) AS DECIMAL(10, 1)) AS [TotalPlannedHours], CAST(ISNULL(SUM(o.[DowntimeHours]), 0) AS DECIMAL(10, 1)) AS [TotalDowntimeHours], ISNULL(SUM(o.[GoodUnits]), 0) AS [TotalGoodUnits], ISNULL(SUM(o.[DefectiveUnits]), 0) AS [TotalDefectiveUnits], CONCAT(FLOOR(ISNULL(SUM(o.[Availability] * o.[Performance] * o.[Quality] * o.[PlannedProductionHours]) / NULLIF(SUM(o.[PlannedProductionHours]), 0), 0) * 100), '%') AS [Overall_OEE] FROM AllDays d LEFT JOIN WorkCenterOEE o ON d.[Date] = o.[Date] GROUP BY d.[Date] ORDER BY d.[Date] OPTION (MAXRECURSION 100);"
  },
  {
    "example_question": "What was the average OEE for all 'CNC' type machines in February?",
    "example_answer": "DECLARE @IdealRate DECIMAL(10, 2) = 1.0; DECLARE @StartDate DATE = '2025-02-01'; DECLARE @EndDate DATE = '2025-02-28'; WITH WorkCenterOEE AS (SELECT s.[Date], s.[WorkCenterID], s.[PlannedProductionHours], CASE WHEN s.[PlannedProductionHours] > 0 THEN (s.[PlannedProductionHours] - (ISNULL(d.[TotalDowntimeMinutes], 0) / 60.0)) / s.[PlannedProductionHours] ELSE 0 END AS [Availability], CASE WHEN (s.[PlannedProductionHours] - (ISNULL(d.[TotalDowntimeMinutes], 0) / 60.0)) > 0 THEN LEAST(1.0, (ISNULL(p.[GoodUnits], 0) * 1.0) / ((s.[PlannedProductionHours] - (ISNULL(d.[TotalDowntimeMinutes], 0) / 60.0)) * @IdealRate)) ELSE 0 END AS [Performance], CASE WHEN ISNULL(p.[TotalUnits], 0) > 0 THEN (ISNULL(p.[GoodUnits], 0) * 1.0 / p.[TotalUnits]) ELSE 1 END AS [Quality] FROM (SELECT CAST(pd.[ProductionDateTime] AS DATE) AS [Date], pd.[WorkCenterID], CAST(SUM(CASE WHEN s.[EndTime] < s.[StartTime] THEN DATEDIFF(hour, s.[StartTime], s.[EndTime]) + 24 ELSE DATEDIFF(hour, s.[StartTime], s.[EndTime]) END) AS DECIMAL(10, 2)) AS [PlannedProductionHours] FROM dbo.\"ProductionData\" pd JOIN dbo.\"Shifts\" s ON pd.\"ShiftID\" = s.\"ShiftID\" WHERE pd.\"ProductionDateTime\" BETWEEN @StartDate AND DATEADD(day, 1, @EndDate) GROUP BY CAST(pd.\"ProductionDateTime\" AS DATE), pd.\"WorkCenterID\") s LEFT JOIN (SELECT CAST([ProductionDateTime] AS DATE) AS [Date], [WorkCenterID], SUM([QuantityProduced]) AS [TotalUnits], SUM(CASE WHEN [Status] IN ('Completed', 'Inspected') THEN [QuantityProduced] ELSE 0 END) AS [GoodUnits] FROM dbo.\"ProductionData\" WHERE [ProductionDateTime] BETWEEN @StartDate AND DATEADD(day, 1, @EndDate) GROUP BY CAST([ProductionDateTime] AS DATE), [WorkCenterID]) p ON s.[Date] = p.[Date] AND s.[WorkCenterID] = p.[WorkCenterID] LEFT JOIN (SELECT CAST([DowntimeStartDateTime] AS DATE) AS [Date], [WorkCenterID], SUM(DATEDIFF(minute, [DowntimeStartDateTime], [DowntimeEndDateTime])) AS [TotalDowntimeMinutes] FROM dbo.\"MachineDowntime\" WHERE [DowntimeStartDateTime] BETWEEN @StartDate AND DATEADD(day, 1, @EndDate) GROUP BY CAST([DowntimeStartDateTime] AS DATE), [WorkCenterID]) d ON s.[Date] = d.[Date] AND s.[WorkCenterID] = d.[WorkCenterID]) SELECT wc.\"MachineType\", CONCAT(CAST(AVG(oee.[Availability] * oee.[Performance] * oee.[Quality]) * 100 AS DECIMAL(5,1)), '%') AS [Average_OEE] FROM WorkCenterOEE oee JOIN dbo.\"WorkCenters\" wc ON oee.\"WorkCenterID\" = wc.\"WorkCenterID\" WHERE wc.\"MachineType\" = 'CNC' GROUP BY wc.\"MachineType\";"
  }
]